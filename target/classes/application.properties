spring.application.name=et-send

spring.cloud.stream.kafka.binder.zk-nodes=zk.dev.365etc.com:2181
spring.cloud.stream.kafka.binder.brokers=kk.dev.365etc.com:9092
spring.cloud.stream.kafka.binder.minPartitionCount=1
spring.cloud.stream.kafka.binder.autoCreateTopics=true
spring.cloud.stream.kafka.binder.autoAddPartitions=true

#destination:通道与消息系统连接的目的地
#spring.cloud.stream.bindings.input.destination=output
#spring.cloud.stream.bindings.output_1.destination=input
#spring.cloud.stream.bindings.output_1.content-type=application/json

#分区个数
#spring.cloud.stream.bindings.output_1.producer.partitionCount=2
#指定分区算法
#spring.cloud.stream.bindings.output_1.producer.partitionKeyExpression=payload


#spring.cloud.stream.bindings.output_2.destination=input_2
#spring.cloud.stream.bindings.output_2.content-type=application/json

#分区个数
#spring.cloud.stream.bindings.output_2.producer.partitionCount=2
#指定分区算法
#spring.cloud.stream.bindings.output_2.producer.partitionKeyExpression=payload

#spring.cloud.stream.bindings.output.producer.partitionKeyExtractorClass=com.etc.util.MyKeyExtractor


#spring.cloud.stream.bindings.input.group=so8400replay
#spring.cloud.stream.bindings.input.destination=error.so8400out.so8400
#
#spring.cloud.stream.bindings.output.destination=so8400out
#spring.cloud.stream.bindings.output.producer.partitioned=true
#
#spring.cloud.stream.bindings.parkingLot.destination=so8400in.parkingLot
#spring.cloud.stream.bindings.parkingLot.producer.partitioned=true
#
#spring.cloud.stream.kafka.binder.configuration.auto.offset.reset=earliest
#
#spring.cloud.stream.kafka.binder.headers=x-retries

server.port=8801